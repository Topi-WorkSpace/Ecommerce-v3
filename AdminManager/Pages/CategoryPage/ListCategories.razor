@page "/listcategory"
@using Newtonsoft.Json
@inject HttpClient _httpClient
@* @rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false)) *@
<PageTitle>Danh sách loại hàng</PageTitle>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Category Name</th>
            <th scope="col">Image</th>
            <th scope="col">Status</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var category in categories)
        {
            <tr>
                <th scope="row">@category.CategoryId</th>
                <td scope="row">@category.CategoryName</td>
                <td scope="row">@category.Image</td>
                <td scope="row">@category.Status</td>
                <td scope="row">
                    <a href="" class="btn btn-primary">Update</a>
                    <a href="" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>

</table>
@code {
    //private Category[] categories;
    private IEnumerable<Category> categories = new List<Category>();


    protected override async Task OnInitializedAsync()
    {

        try
        {
            //await Task.Delay(500);

            // categories = await http.GetFromJsonAsync<IEnumerable<Category>>("api/Category/Categories");

            // HttpClient httpClient = new HttpClient();
            // var response = await httpClient.GetAsync("https://localhost:7206/api/Category/Categories");
            //     string apiResponse = await response.Content.ReadAsStringAsync();
            //     categories = JsonConvert.DeserializeObject<Category[]>(apiResponse);


            categories = await _httpClient.GetFromJsonAsync<List<Category>>("Category/Categories");

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
            throw;
        }
    }

}